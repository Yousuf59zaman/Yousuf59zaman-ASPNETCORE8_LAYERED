@model IEnumerable<ProductViewModel>

@{
    ViewData["Title"] = "Your Cart";
}

<h2>Your Cart</h2>

<!-- Add a hidden form to include the anti-forgery token -->
<form id="cart-update-form">
    @Html.AntiForgeryToken()
</form>

@if (!Model.Any())
{
    <p>Your cart is empty.</p>
}
else
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Description</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total Price</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Model)
            {
                <tr>
                    <td>@product.ProductName</td>
                    <td>@product.ProductDesc</td>
                    <td>$@product.ProductUnitPrice</td>
                    <td>
                        <div class="input-group">
                            <span class="input-group-btn">
                                <button type="button" class="btn btn-outline-secondary" onclick="changeQuantity(this, -1, '@product.ProductId')">-</button>
                            </span>
                            <input type="text" id="quantity-@product.ProductId" value="@product.Quantity" class="form-control text-center" style="width: 50px;" readonly />
                            <span class="input-group-btn">
                                <button type="button" class="btn btn-outline-secondary" onclick="changeQuantity(this, 1, '@product.ProductId')">+</button>
                            </span>
                        </div>
                    </td>
                    <td id="totalPrice-@product.ProductId" data-unitprice="@product.ProductUnitPrice">
                        $@(@product.ProductUnitPrice * product.Quantity)
                    </td>
                    <td>
                        <a asp-action="RemoveFromCart" asp-route-id="@product.ProductId" class="btn btn-danger btn-sm">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="d-flex justify-content-between">
        <a asp-action="Index" class="btn btn-secondary">Go Back to Shopping</a>
        <a asp-action="Checkout" asp-controller="Order" class="btn btn-primary">Proceed to Checkout</a>
    </div>
}

@section Scripts {
    <script>
        function getAntiForgeryToken() {
            // Retrieve the anti-forgery token from the hidden form
            return document.querySelector('#cart-update-form input[name="__RequestVerificationToken"]').value;
        }

        function changeQuantity(button, increment, productId) {
            var input = document.getElementById('quantity-' + productId);
            var currentValue = parseInt(input.value);
            if (currentValue + increment > 0) {
                var newQuantity = currentValue + increment;
                input.value = newQuantity;

                // Update total price immediately in the UI
                var unitPrice = parseFloat(document.getElementById('totalPrice-' + productId).getAttribute('data-unitprice'));
                document.getElementById('totalPrice-' + productId).innerText = '$' + (unitPrice * newQuantity).toFixed(2);

                // Send the updated quantity to the server to update the session
                fetch('@Url.Action("UpdateCartQuantity", "Home")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': getAntiForgeryToken()
                    },
                    body: JSON.stringify({ productId: productId, quantity: newQuantity })
                })
                    .then(response => {
                        if (response.ok) {
                            console.log('Quantity updated successfully in session.');
                        } else {
                            console.error('Failed to update quantity.');
                        }
                    })
                    .catch(error => console.error('Error:', error));
            }
        }
    </script>
}
